# load modules
ml mamba
source activate mrtrix3
ml fsl


## bias correction 
for ID in $(seq 10002 10150) $(seq 11001 11105); do
    echo "Processing sucject: $i"  
dwibiascorrect ants v2preproc/${i}_v2preproc.mif ants/${i}_v2preproc_unbiased.mif
done

## group normalization
dwinormalise group ants/ template/mask_input/ dwinormalise/dwi_output/ fa_template.mif fa_template_wm_mask.mif -force

## preproc try again
for ID in $(seq 10002 10150) $(seq 11001 11105); do
    echo "Processing ID: $ID"
    dwi2response tournier ants/${ID}_v2preproc_unbiased.mif v2preproc/wmresponse/${ID}_wm_response.txt 
    dwi2mask ants/${ID}_v2preproc_unbiased.mif dwimask/${ID}_dwi_mask.mif     
done


## all together now avg response 9 and 10
responsemean wmresponse/*_wm_response.txt group_average_response_2.txt
for ID in $(seq 10002 10150) $(seq 11001 11105); do
    echo "Processing wmfod: $ID"
dwi2fod csd ants/${ID}_v2preproc_unbiased.mif group_average_response_2.txt wmfod2/${ID}_wmfod.mif -mask dwimask/${ID}_dwi_mask.mif
done
population_template wmfod2 -mask_dir dwimask template3/wmfod_template_vox_2.mif -voxel_size 2.00

# Step 11 and 12
mkdir template3/maskintemp
for ID in $(seq 10002 10150) $(seq 11001 11105); do
    echo "Register to template: $ID"
mrregister  wmfod2/${ID}_wmfod.mif -mask1 dwimask/${ID}_dwi_mask.mif template3/wmfod_template_vox_2.mif -nl_warp template3/sub2temp/${ID}_subject2template_warp.mif template2/temp2sub/${ID}_template2subject_warp.mif
    echo "Mask to template: $ID"
mrtransform dwimask/${ID}_dwi_mask.mif -warp template3/sub2temp/${ID}_subject2template_warp.mif -interp nearest -datatype bit template3/maskintemp/${ID}_dwi_mask_in_template_space.mif
done
mrmath template2/maskintemp/*_dwi_mask_in_template_space.mif min /template2/template_mask.mif -datatype bit

# Step 11 and 12 smoothing out nl
mkdir template3/maskintemp
for ID in $(seq 10002 10150) $(seq 11001 11105); do
    echo "Register to template: $ID"
mrregister wmfod2/${ID}_wmfod.mif -mask1 dwimask/${ID}_dwi_mask.mif template3/wmfod_template.mif -nl_warp template3/nl_up_smooth/${ID}_subject2template_warp.mif template3/nl_up_smooth/${ID}_template2subject_warp.mif
    echo "Mask to template: $ID"
mrtransform dwimask/${ID}_dwi_mask.mif -warp template3/nl_up_smooth/${ID}_subject2template_warp.mif -interp nearest -datatype bit template3/nl_up_smooth/${ID}_dwi_mask_in_template_space.mif
done
mrmath template3/nl_up_smooth/*_dwi_mask_in_template_space.mif min /template3/template_mask.mif -datatype bit
# step 13
mkdir template3/fixel_mask
fod2fixel -mask template3/template_mask.mif -fmls_peak_value 0.10 template3/wmfod_template.mif template3/fixel_mask

# step 14 15
mkdir template2/fodintemp
mkdir template2/fixelintemp
for ID in $(seq 10002 10150) $(seq 11001 11105); do
    echo "Warp FOD to template: $ID"
mrtransform wmfod2/${ID}_wmfod.mif -warp template3/sub2temp/${ID}_subject2template_warp.mif -reorient_fod no template3/fodintemp/${ID}_fod_in_template_space_NOT_REORIENTED.mif
fod2fixel -mask2 template3/template_mask.mif template3/fodintemp/${ID}_fod_in_template_space_NOT_REORIENTED.mif template3/fixelintemp/${ID}_fixel_in_template_space_NOT_REORIENTED -afd fd.mif
done

mrtransform dwimask/11105_dwi_mask.mif -warp template2/nl_up_smooth/11105_subject2template_warp.mif -interp nearest -datatype bit template3/nl_up_smooth/11105_dwi_mask_in_template_space.mif




