# load modules
ml mamba
source activate mrtrix3
ml ants
ml fsl


## bias correction 
for ID in $(seq 10002 10150) $(seq 11001 11105); do
    echo "Processing sucject: $i"  
dwibiascorrect ants v2preproc/${i}_v2preproc.mif ants/${i}_v2preproc_unbiased.mif
done

## group normalization
dwinormalise group ants/ template/mask_input/ dwinormalise/dwi_output/ dwinormalise/control_fa_template.mif /dwinormalise/control_fa_template_wm_mask.mif -force

## preproc try again

for ID in $(seq 10002 10150) $(seq 11001 11105); do
    echo "Processing ID: $ID"
    dwi2response tournier ants/${ID}_v2preproc_unbiased.mif v2preproc/wmresponse/${ID}_wm_response.txt 
    dwi2mask ants/${ID}_v2preproc_unbiased.mif dwimask/${ID}_dwi_mask.mif     
done

#ASD group
responsemean v2preproc/wmresponse/*_wm_response.txt ASD_average_response.txt
#control group 
responsemean v2preproc/wmresponse/*_wm_response.txt control_average_response.txt

# step 9
for ID in $(seq 10002 10150) $(seq 11001 11105); do
    echo "Processing ID: $ID"
dwi2fod csd ants/${ID}_v2preproc_unbiased.mif control_average_response.txt wmfod/${ID}_wmfod.mif -mask dwimask/${ID}_dwi_mask.mif
done


#step 10
population_template wmfod2 -mask_dir dwimask template2/wmfod_template_vox_125.mif -voxel_size 1.25

## all together now avg response 9 and 10
responsemean wmresponse/*_wm_response.txt group_average_response_2.txt
for ID in $(seq 10002 10150) $(seq 11001 11105); do
    echo "Processing wmfod: $ID"
dwi2fod csd ants/${ID}_v2preproc_unbiased.mif group_average_response_2.txt wmfod2/${ID}_wmfod.mif -mask dwimask/${ID}_dwi_mask.mif
done
population_template wmfod2 -mask_dir dwimask template2/wmfod_template_vox_125.mif -voxel_size 1.25
population_template wmfod_men -mask_dir dwimask_men template3/wmfod_template.mif 

# Step 11 and 12
mkdir template3/maskintemp
for ID in $(seq 10002 10150) $(seq 11001 11105); do
    echo "Register to template: $ID"
mrregister wmfod2/${ID}_wmfod.mif -mask1 dwimask/${ID}_dwi_mask.mif template2/wmfod_template.mif -nl_warp template3/sub2temp/${ID}_subject2template_warp.mif template2/temp2sub/${ID}_template2subject_warp.mif
    echo "Mask to template: $ID"
mrtransform dwimask/${ID}_dwi_mask.mif -warp template2/sub2temp/${ID}_subject2template_warp.mif -interp nearest -datatype bit template2/maskintemp/${ID}_dwi_mask_in_template_space.mif
done
mrmath template3/maskintemp/*_dwi_mask_in_template_space.mif min /template3/template_mask.mif -datatype bit

# step 13
mkdir template2/fixel_mask
fod2fixel -mask template2/template_mask.mif -fmls_peak_value 0.10 template2/wmfod_template.mif template2/fixel_mask

# step 14 15
mkdir template2/fodintemp
mkdir template2/fixelintemp
for ID in $(seq 10002 10150) $(seq 11001 11105); do
    echo "Warp FOD to template: $ID"
mrtransform wmfod2/${ID}_wmfod.mif -warp template2/sub2temp/${ID}_subject2template_warp.mif -reorient_fod no template2/fodintemp/${ID}_fod_in_template_space_NOT_REORIENTED.mif
fod2fixel -mask2 template2/template_mask.mif template2/fodintemp/${ID}_fod_in_template_space_NOT_REORIENTED.mif template2/fixelintemp/${ID}_fixel_in_template_space_NOT_REORIENTED -afd fd.mif
done




