############################### Preproc Code ##################################################

# load enviorments
ml mamba
source activate mrtrix3
ml fsl

# Preproc sequence loop
for i in $(seq 10073 10113); do
  echo "Processing subject $i"
  
  # Navigate to the subject directory
  cd ~/DICOMS_2/$i
    
  #compress to image file
  # mrconvert DTI32/ $i.nii -force
  # mrconvert $i.nii $i.mif -force

  # format for preprocessing
  mrconvert DTI32/ $i-vox.mif -vox 2 -coord 3 '0:1:32'
  dwidenoise $i-vox.mif v2vox.mif -noise v2_denoised.mif
  mrcalc v2_denoised.mif v2vox.mif -subtract v2_res.mif

  #fsl shit
  dwifslpreproc v2vox.mif v2preproc.mif -rpe_none -pe_dir AP -readout_time 0.1 -eddy_options " --slm=linear "
  dwi2mask v2preproc.mif - | maskfilter - dilate - | mrconvert - eddy_mask.nii -datatype float32 -strides -1,+2,+3

# FBA
dwi2response tournier v2preproc.mif wm_response.txt
dwi2mask v2preproc.mif v2_tempmask.mif
dwi2fod csd v2preproc.mif wm_response.txt v2fod.mif
fod2fixel -mask v2_tempmask.mif -fmls_peak_value 0.10 v2fod.mif fixel_mask
fod2fixel -mask v2_tempmask.mif v2fod.mif fixel_space -afd v2FD.mif

  echo "Finished processing subject $i"
done

# tck in scratch
cd /scratch/cbayouth/group/     
 ml mamba
source activate mrtrix3
ml fsl

# Loop from 11001 to 11042
for i in $(seq 11001 11042); do
  echo "Processing subject $i for tractography"
  
  # Run tckgen with the updated paths
  tckgen -angle 22.5 -maxlen 250 -minlen 10 -power 1.0 \
    /scratch/cbayouth/group/v2fod/${i}_v2fod.mif \
    -seed_image /scratch/cbayouth/group/v2_tempmask/${i}_v2_tempmask.mif \
    -mask /scratch/cbayouth/group/v2_tempmask/${i}_v2_tempmask.mif \
    -select 20000000 -cutoff 0.10 \
    /scratch/cbayouth/group/tracks_20mil/${i}_20_million.tck

  # Run tcksift with the updated paths
  tcksift /scratch/cbayouth/group/tracks_20mil/10117_20_million.tck \
    /scratch/cbayouth/group/v2fod/10117_v2fod.mif \
    /scratch/cbayouth/group/tracks_2mil.sift/10117_2_million.sift.tck \
    -term_number 2000000

  echo "Finished processing subject $i for tractography"
done


# poptemplate FODs dont kill urself
mkdir -p ../template/fod_input
mkdir ../template/mask_input
population_template ../template/fod_input -mask_dir ../template/mask_input ../template/wmfod_template.mif -voxel_size 1.25

# group templates
dwinormalise group /scratch/cbayouth/group/v2preproc /scratch/cbayouth/group/eddymask /scratch/cbayouth/group/dwi_output /scratch/cbayouth/group/fa_template.mif /scratch/cbayouth/group/fa_template_wm_mask.mif

# create population template
population_template v2fod/ template.mif -mask_dir masks/
population_template v2fod/ template.mif -mask_dir masks/ -nl_update_smooth 5 -nl_disp_smooth 2 -nl_grad_step 0.25
fod2fixel template.mif template_fixel_dir -afd template_FD.mif
# For each subject
fixelcorrespondence fixel_space/v2FD.mif fixel_mask v2_FDpr
 
# Loop from 10003 to 10150
for i in $(seq 10003 10150); do
tckmap tracks_2mil.sift/${i}_2_million.sift.tck -template v2preproc/${i}_v2preproc.mif tdi_map/${i}_tdi_map.mif
done

## Working on this 

## what Ed gave me
tckmap tracks_2mil.sift -template v2preproc/10002_v2preproc.mif tdi_map/10002_tdi_map.mif
## what I need?
tckmap tracks_2mil.sift/10117_2_million.sift.tck -template v2preproc/10117_v2preproc.mif tdi_map/10117_tdi_map.mif


############################### Retry ##################################################
# load modules
ml mamba
source activate mrtrix3
ml fsl


## bias correction 
for ID in $(seq 10002 10150) $(seq 11001 11105); do
    echo "Processing sucject: $i"  
dwibiascorrect ants v2preproc/${i}_v2preproc.mif ants/${i}_v2preproc_unbiased.mif
done

## group normalization
dwinormalise group ants/ template/mask_input/ dwinormalise/dwi_output/ fa_template.mif fa_template_wm_mask.mif -force

## preproc try again
for ID in $(seq 10002 10150) $(seq 11001 11105); do
    echo "Processing ID: $ID"
    dwi2response tournier ants/${ID}_v2preproc_unbiased.mif v2preproc/wmresponse/${ID}_wm_response.txt 
    dwi2mask ants/${ID}_v2preproc_unbiased.mif dwimask/${ID}_dwi_mask.mif     
done


## all together now avg response 9 and 10
responsemean wmresponse/*_wm_response.txt group_average_response_2.txt
for ID in $(seq 10002 10150) $(seq 11001 11105); do
    echo "Processing wmfod: $ID"
dwi2fod csd ants/${ID}_v2preproc_unbiased.mif group_average_response_2.txt wmfod2/${ID}_wmfod.mif -mask dwimask/${ID}_dwi_mask.mif
done
population_template wmfod2 -mask_dir dwimask template3/wmfod_template_vox_2.mif -voxel_size 2.00

# Step 11 and 12
mkdir template3/maskintemp
for ID in $(seq 10002 10150) $(seq 11001 11105); do
    echo "Register to template: $ID"
mrregister  wmfod2/${ID}_wmfod.mif -mask1 dwimask/${ID}_dwi_mask.mif template3/wmfod_template_vox_2.mif -nl_warp template3/sub2temp/${ID}_subject2template_warp.mif template2/temp2sub/${ID}_template2subject_warp.mif
    echo "Mask to template: $ID"
mrtransform dwimask/${ID}_dwi_mask.mif -warp template3/sub2temp/${ID}_subject2template_warp.mif -interp nearest -datatype bit template3/maskintemp/${ID}_dwi_mask_in_template_space.mif
done
mrmath template2/maskintemp/*_dwi_mask_in_template_space.mif min /template2/template_mask.mif -datatype bit

# Step 11 and 12 smoothing out nl
mkdir template3/maskintemp
for ID in $(seq 10002 10150) $(seq 11001 11105); do
    echo "Register to template: $ID"
mrregister -nl_update_smooth 3.0 wmfod2/${ID}_wmfod.mif -mask1 dwimask/${ID}_dwi_mask.mif template3/wmfod_template_vox_2.mif -nl_warp template3/nl_up_smooth/${ID}_subject2template_warp.mif template3/nl_up_smooth/${ID}_template2subject_warp.mif
    echo "Mask to template: $ID"
mrtransform dwimask/${ID}_dwi_mask.mif -warp template3/nl_up_smooth/${ID}_subject2template_warp.mif -interp nearest -datatype bit template3/nl_up_smooth/${ID}_dwi_mask_in_template_space.mif
done
mrmath template3/nl_up_smooth/*_dwi_mask_in_template_space.mif min /template3/template_mask.mif -datatype bit
# step 13
mkdir template3/fixel_mask
fod2fixel -mask template3/template_mask.mif -fmls_peak_value 0.10 template3/wmfod_template.mif template3/fixel_mask

# step 14 15
mkdir template2/fodintemp
mkdir template2/fixelintemp
for ID in $(seq 10002 10150) $(seq 11001 11105); do
    echo "Warp FOD to template: $ID"
mrtransform wmfod2/${ID}_wmfod.mif -warp template3/sub2temp/${ID}_subject2template_warp.mif -reorient_fod no template3/fodintemp/${ID}_fod_in_template_space_NOT_REORIENTED.mif
fod2fixel -mask2 template3/template_mask.mif template3/fodintemp/${ID}_fod_in_template_space_NOT_REORIENTED.mif template3/fixelintemp/${ID}_fixel_in_template_space_NOT_REORIENTED -afd fd.mif
done

mrtransform dwimask/11105_dwi_mask.mif -warp template2/nl_up_smooth/11105_subject2template_warp.mif -interp nearest -datatype bit template3/nl_up_smooth/11105_dwi_mask_in_template_space.mif

############################### 3rd Try ##################################################
mkdir template3/sub-temp
mkdir template3/maskintemp
# step 11 12
for ID in $(seq 10002 10150) $(seq 11001 11105); do
    echo "Register to template: $ID"
mrregister -nl_update_smooth 2.5 wmfod2/${ID}_wmfod.mif -mask1 dwimask/${ID}_dwi_mask.mif template3/wmfod_template_vox_2.mif -nl_warp template3/sub-temp/${ID}_subject2template_warp.mif template3/sub-temp/${ID}_template2subject_warp.mif
    echo "Mask to template: $ID"
mrtransform dwimask/${ID}_dwi_mask.mif -warp template3/sub-temp/${ID}_subject2template_warp.mif -interp nearest -datatype bit template3/maskintemp/${ID}_dwi_mask_in_template_space.mif
done
mrmath template3/maskintemp/*_dwi_mask_in_template_space.mif min template3/template_mask_try3.mif -datatype bit
# step 13
fod2fixel -mask template3/template_mask_try3.mif -fmls_peak_value 0.10 template3/wmfod_template_vox_2.mif template3/fixel_mask

# step 14 15
for ID in $(seq 10002 10150) $(seq 11001 11105); do
mrtransform wmfod2/${ID}_wmfod.mif -warp template3/sub-temp/${ID}_subject2template_warp.mif -reorient_fod no template3/fodintemp/${ID}_fod_in_template_space_NOT_REORIENTED.mif
fod2fixel -mask template3/template_mask_try3.mif template3/fodintemp/10002_fod_in_template_space_NOT_REORIENTED.mif template3/fixelintemp/10002_fixel_in_template_space_NOT_REORIENTED -afd 10002_fd.mif
done

#try to see if it works step 14 and 15
mrtransform wmfod2/10002_wmfod.mif -warp template3/sub-temp/10002_subject2template_warp.mif -reorient_fod no template3/fodintemp/10002_fod_in_template_space_NOT_REORIENTED.mif
fod2fixel -mask template3/template_mask_try3.mif template3/fodintemp/10002_fod_in_template_space_NOT_REORIENTED.mif template3/fixelintemp/10002_fixel_in_template_space_NOT_REORIENTED -afd 10002_fd.mif

############################### 4th Try ##################################################
mrmath template3/maskintemp/*_dwi_mask_in_template_space-10.mif min template3/template_mask_try4.mif -datatype bit
# fixel mask
fod2fixel -mask template3/template_mask_try4.mif -fmls_peak_value 0.1 template3/wmfod_template_vox_2.mif template3/fixel_mask2

#retry fixel mask?
fod2fixel -mask template3/template_mask_try4.mif -fmls_peak_value 0.075 template3/wmfod_template_vox_2.mif template3/fixel_mask2

# step 14 15
for ID in $(seq 10002 10150) $(seq 11001 11105); do
echo "$ID warping to template"
mrtransform wmfod2/${ID}_wmfod.mif -warp template3/sub-temp/${ID}_subject2template_warp.mif -reorient_fod no template3/fodintemp/${ID}_fod_in_template_space_NOT_REORIENTED.mif
echo "$ID segmenting FOD for AFD estimation"
fod2fixel -mask template3/template_mask_try4.mif template3/fodintemp/${ID}_fod_in_template_space_NOT_REORIENTED.mif template3/fixelintemp/${ID}_fixel_in_template_space_NOT_REORIENTED -afd ${ID}_fd.mif
done

#Step 16 reorienting subj fixels in template space
cd template3
for ID in $(seq 10002 10150) $(seq 11001 11105); do
fixelreorient fixelintemp/${ID}_fixel_in_template_space_NOT_REORIENTED sub-temp/${ID}_subject2template_warp.mif fixel_reorient/${ID}_fixel_in_template_space
done
#Step 17 assigning subj fixels to template
for ID in $(seq 10002 10150) $(seq 11001 11105); do
echo "$ID fixels to template"
fixelcorrespondence fixel_reorient/${ID}_fixel_in_template_space/PRE.mif fixel_mask fd/${ID}_fd PRE.mif
done
#Step 18 calculating fiber crossection metrics
for ID in $(seq 10002 10150) $(seq 11001 11105); do
echo "$ID calculating FC"
warp2metric sub-temp/${ID}_subject2template_warp.mif -fc fixel_mask fc2/${ID}_fc ${ID}.mif -force
done
## Keep getting "-bash: fc/${ID}_fc/IN.mif: Permission denied" for this
for ID in $(seq 10002 10150) $(seq 11001 11105); do
echo "$ID log_FC calc"
fc/${ID}_fc/IN.mif -log log_fc/${ID}_fc/IN.mif
done

Step 19
mkdir fdc
for id in $(seq 10002 10150) $(seq 11001 11105); do
  src="fd/${id}_fd/index.mif"
  dst="fd/output/${id}_fd.mif"
  if [ -f "$src" ]; then
    cp "$src" "$dst"
fi
done

mkdir ../template/fdc2


for ID in $(seq 10002 10150) $(seq 11001 11105); do
mrcalc fd/output/${ID}_fd.mif fc2/output/${ID}_fc.mif -mult fdc/${ID}_fdc.mif
done

## Step 20 21
tckgen -angle 22.5 -maxlen 250 -minlen 10 -power 1.0 wmfod_template_vox_2.mif -seed_image template_mask_try4.mif -mask template_mask_try4.mif -select 20000000 -cutoff 0.10 tracks_20_million.tck
tcksift tracks_20_million.tck wmfod_template_vox_2.mif tracks_2_million_sift.tck -term_number 2000000
## Step 22
fixelconnectivity fixel_mask/ tracks_2_million_sift.tck matrix/

#fd stats
fixelcfestats ./fixel_mask ./fd/output/file_names3.txt design2.txt contrast.txt matrix2/ stats_fd2/
#fdc stats
fixelcfestats ./fixel_mask file_names_fdc.txt design2.txt contrast.txt matrix2/ stats_fdc/

#trying it first
fixelreorient fixelintemp/10002_fixel_in_template_space_NOT_REORIENTED sub-temp/10002_subject2template_warp.mif fixel_reorient/10002_fixel_in_template_space
fixelcorrespondence fixel_reorient/10002_fixel_in_template_space/PRE.mif fixel_mask fd/10002_fd 10002.mif
warp2metric sub-temp/10002_subject2template_warp.mif -fc fixel_mask fc/10002_fc 10002.mif
############################### Fick ##################################################
 ml mamba
source activate mrtrix3
module load fsl/6.0.7

# Loop from 10114 to 10150
for i in $(seq 10114 10150); do
  echo "Processing subject $i"
  
  # Navigate to the subject directory
  cd ~/DICOMS_3/$i
    
  #compress to image file
  mrconvert DTI32/ $i.nii
  mrconvert $i.nii $i.mif

  # format for preprocessing
  mrconvert DTI32/ $i-vox.mif -vox 2 -coord 3 '0:1:32'
  dwidenoise $i-vox.mif v2vox.mif -noise v2_denoised.mif
  mrcalc v2_denoised.mif v2vox.mif -subtract v2_res.mif

  #fsl shit
  dwifslpreproc v2vox.mif v2preproc.mif -rpe_none -pe_dir AP -readout_time 0.1 -eddy_options " --slm=linear "
  dwi2mask v2preproc.mif - | maskfilter - dilate - | mrconvert - eddy_mask.nii -datatype float32 -strides -1,+2,+3

TRY AGAIN FBA
mrgrid v2preproc/$i_v2preproc.mif regrid -vox 1.25 grid/$i_v2preproc.mif
# FBA
dwi2response tournier v2preproc.mif wm_response.txt
dwi2mask v2preproc.mif v2_tempmask.mif
dwi2fod csd v2preproc.mif wm_response.txt v2fod.mif
fod2fixel -mask v2_tempmask.mif -fmls_peak_value 0.10 v2fod.mif fixel_mask
fod2fixel -mask v2_tempmask.mif v2fod.mif fixel_space -afd v2FD.mif

  echo "Finished processing subject $i"
done



#Before FODs, getting it weird (for fun)
for ID in $(seq 10003 10150); do
    echo "Processing ID: $ID"
    
    dwi2response tournier v2preproc/${ID}_v2preproc.mif v2preproc/wmresponse/${ID}_wm_response.txt
    mrgrid v2preproc/${ID}_v2preproc.mif regrid -vox 1.25 grid/${ID}_v2preproc_upsampled.mif
    dwi2mask grid/${ID}_v2preproc_upsampled.mif dwimask/${ID}_dwi_mask_upsampled.mif
  
done

  dwi2fod csd grid/${ID}_v2preproc_upsampled.mif v2preproc/wmresponse/${ID}_wm_response.txt wmfod/${ID}_wmfod.mif
# Loop from 10002 to 10150
for i in $(seq 10002 10150); do

dwi2response tournier v2preproc/$i_v2preproc.mif v2preproc/$i_wm_response.txt
mrgrid v2preproc/$i_v2preproc.mif regrid -vox 1.25 grid/$i_v2preproc_upsampled.mif
dwi2mask grid/$i_v2preproc_upsampled.mif dwimask/$i_dwi_mask_upsampled.mif
dwi2fod csd grid/$i_v2preproc_upsampled.mif v2preproc/$i_wm_response.txt wmfod/$i_wmfod.mif
echo "Finished processing subject $i"
done

dwi2fod csd $i_v2preproc_upsampled.mif wm_response.txt v2fod.mif
fod2fixel -mask v2_tempmask.mif -fmls_peak_value 0.10 v2fod.mif fixel_mask
fod2fixel -mask v2_tempmask.mif v2fod.mif fixel_space -afd v2FD.mif
 echo "Finished processing subject $i"
done
