#!/bin/bash

# v2preproc shit
SOURCE_BASE="/home/cbayouth/DICOMS_5"
DESTINATION_BASE="/home/cbayouth/group/v2preproc_1"

# Create the destination folder if it doesn't exist
mkdir -p "$DESTINATION_BASE"

# Loop through the range of IDs
for i in {11043..11107}; do
    # Construct the source file path
    SOURCE_FILE="$SOURCE_BASE/$i/v2preproc.mif"

    # Construct the destination file path with the new name
    DESTINATION_FILE="$DESTINATION_BASE/${i}_v2preproc.mif"

    # Check if the source file exists before copying
    if [[ -f "$SOURCE_FILE" ]]; then
        # Copy and rename the file
        cp "$SOURCE_FILE" "$DESTINATION_FILE"
        echo "Copied: $SOURCE_FILE to $DESTINATION_FILE"
    else
        echo "Source file does not exist: $SOURCE_FILE"
    fi
done


# eddymask shit
SOURCE_BASE="/home/cbayouth/DICOMS_5"
DESTINATION_BASE="/home/cbayouth/group/eddymask"

# Create the destination folder if it doesn't exist
mkdir -p "$DESTINATION_BASE"

# Loop through the range of IDs 
for i in {11043..11107}; do
    # Construct the source file path
    SOURCE_FILE="$SOURCE_BASE/$i/eddy_mask.nii"

    # Construct the destination file path with the new name
    DESTINATION_FILE="$DESTINATION_BASE/${i}_eddymask.nii"

    # Check if the source file exists before copying
    if [[ -f "$SOURCE_FILE" ]]; then
        # Copy and rename the file
        cp "$SOURCE_FILE" "$DESTINATION_FILE"
        echo "Copied: $SOURCE_FILE to $DESTINATION_FILE"
    else
        echo "Source file does not exist: $SOURCE_FILE"
    fi
done

# v2fod shit
SOURCE_BASE="/home/cbayouth/DICOMS_5"
DESTINATION_BASE="/home/cbayouth/group/v2fod"

# Create the destination folder if it doesn't exist
mkdir -p "$DESTINATION_BASE"

# Loop through the range of IDs 
for i in {11043..11107}; do
    # Construct the source file path
    SOURCE_FILE="$SOURCE_BASE/$i/v2fod.mif"

    # Construct the destination file path with the new name
    DESTINATION_FILE="$DESTINATION_BASE/${i}_v2fod.mif"

    # Check if the source file exists before copying
    if [[ -f "$SOURCE_FILE" ]]; then
        # Copy and rename the file
        cp "$SOURCE_FILE" "$DESTINATION_FILE"
        echo "Copied: $SOURCE_FILE to $DESTINATION_FILE"
    else
        echo "Source file does not exist: $SOURCE_FILE"
    fi
done

#!/bin/bash

# Define source and destination directories
SRC_DIR="/scratch/cbayouth/group/v2preproc"
DEST_DIR="/scratch/cbayouth/group/ASD/v2preproc"

# Read the ID list
while read ID; do
    SRC_FILE="${SRC_DIR}/${ID}_v2preproc.mif"
    DEST_FILE="${DEST_DIR}/${ID}_v2preproc.mif"

    if [[ -f "$SRC_FILE" ]]; then
        mv "$SRC_FILE" "$DEST_FILE"
        echo "Moved $SRC_FILE to $DEST_FILE"
    else
        echo "File not found: $SRC_FILE"
    fi
done < id_list.txt

#ASD

# Source and destination directories
src_dir="/scratch/cbayouth/group/tdi_map/"
dest_dir="/scratch/cbayouth/group/ASD/tdi_map/"

# List of IDs
ids=( 10001 10002 10003 10004 10005 10007 10008 10010 10012 10020 10021 10022 10023 10024 10025 10026 10027 10033 10035 10037 10038 10040 10043 10047 10050 10051 10053 10055 10059 10061 10062 10064 10065 10066 10067 10068 10069 10070 10072 10073 10074 10075 10077 10078 10079 10080 10081 10084 10085 10087 10089 10090 10091 10092 10093 10096 10098 10101 10104 10107 10110 10111 10115 10118 10119 10120 10121 10122 10123 10124 10125 10126 10127 10128 10129 10130 10134 10135 10136 10137 11001 11002 11003 11004 11005 11007 11012 11014 11019 11023 11024 11025 11029 11030 11031 11038 11043 11044 11049 11052 11053 11054 11055 11058 11059 11060 11061 11062 11063 11064 11066 11067 11069 11071 11072 11075 11076 11078 11080 11081 11083 11084 11085 11086 11087 11088 11090 11091 11093 11095 11098 )


# Loop through each ID and move the corresponding file
for id in "${ids[@]}"; do
    src_file="${src_dir}${id}_tdi_map.mif"
    dest_file="${dest_dir}${id}_tdi_map.mif"
    
    # Check if the source file exists
    if [ -f "$src_file" ]; then
        mv "$src_file" "$dest_file"
        echo "Moved: $src_file to $dest_file"
    else
        echo "File not found: $src_file"
    fi
done

### NT
# Source and destination directories
src_dir="/scratch/cbayouth/group/ASD/ants/"
dest_dir="/scratch/cbayouth/group/control/ants/"

# List of IDs
ids=( 10006 10009 10011 10013 10014 10015 10016 10017 10018 10019 10028 10029 10030 10031 10032 10034 10036 10041 10042 10044 10045 10046 10048 10049 10052 10054 10056 10057 10058 10060 10063 10071 10076 10082 10083 10086 10088 10094 10095 10097 10099 10100 10102 10103 10105 10106 10108 10109 10112 10113 10114 10116 10117 10132 10133 10138 10140 10141 10142 10144 10145 10147 10148 10149 10150 10151 10152 10153 10154 11006 11008 11009 11010 11011 11013 11015 11016 11017 11018 11020 11021 11022 11026 11027 11028 11032 11033 11034 11035 11036 11037 11039 11040 11041 11042 11045 11046 11047 11048 11050 11051 11056 11057 11065 11068 11070 11073 11074 11077 11082 11092 11096 11099 11101 11103 11105 )


# Loop through each ID and move the corresponding file
for id in "${ids[@]}"; do
    src_file="${src_dir}${id}_v2preproc_unbiased.mif"
    dest_file="${dest_dir}${id}_v2preproc_unbiased.mif"
    
    # Check if the source file exists
    if [ -f "$src_file" ]; then
        mv "$src_file" "$dest_file"
        echo "Moved: $src_file to $dest_file"
    else
        echo "File not found: $src_file"
    fi
done

## v2fod ##

#ASD

# Source and destination directories
src_dir="/scratch/cbayouth/group/v2fod/"
dest_dir="/scratch/cbayouth/group/ASD/v2fod/"

# List of IDs
ids=( 10001 10002 10003 10004 10005 10007 10008 10010 10012 10020 10021 10022 10023 10024 10025 10026 10027 10033 10035 10037 10038 10040 10043 10047 10050 10051 10053 10055 10059 10061 10062 100[...] )

# Loop through each ID and move the corresponding file
for id in "${ids[@]}"; do
    src_file="${src_dir}${id}_v2fod.mif"
    dest_file="${dest_dir}${id}_v2fod.mif"
    
    # Check if the source file exists
    if [ -f "$src_file" ]; then
        mv "$src_file" "$dest_file"
        echo "Moved: $src_file to $dest_file"
    else
        echo "File not found: $src_file"
    fi
done

### NT

# Source and destination directories
src_dir="/scratch/cbayouth/group/v2fod/"
dest_dir="/scratch/cbayouth/group/control/v2fod/"

# List of IDs
ids=( 10006 10009 10011 10013 10014 10015 10016 10017 10018 10019 10028 10029 10030 10031 10032 10034 10036 10041 10042 10044 10045 10046 10048 10049 10052 10054 10056 10057 10058 10060 10063 100[...] )

# Loop through each ID and move the corresponding file
for id in "${ids[@]}"; do
    src_file="${src_dir}${id}_v2fod.mif"
    dest_file="${dest_dir}${id}_v2fod.mif"
    
    # Check if the source file exists
    if [ -f "$src_file" ]; then
        mv "$src_file" "$dest_file"
        echo "Moved: $src_file to $dest_file"
    else
        echo "File not found: $src_file"
    fi
done

## remove from ASD/wmresponse
ids=( 10006 10009 10011 10013 10014 10015 10016 10017 10018 10019 10028 10029 10030 10031 10032 10034 10036 10041 10042 10044 10045 10046 10048 10049 10052 10054 10056 10057 10058 10060 10063 10071 10076 10082 10083 10086 10088 10094 10095 10097 10099 10100 10102 10103 10105 10106 10108 10109 10112 10113 10114 10116 10117 10132 10133 10138 10140 10141 10142 10144 10145 10147 10148 10149 10150 10151 10152 10153 10154 11006 11008 11009 11010 11011 11013 11015 11016 11017 11018 11020 11021 11022 11026 11027 11028 11032 11033 11034 11035 11036 11037 11039 11040 11041 11042 11045 11046 11047 11048 11050 11051 11056 11057 11065 11068 11070 11073 11074 11077 11082 11092 11096 11099 11101 11103 11105 )
for id in "${ids[@]}"; do
    filepath="v2preproc/wmresponse/${id}_wm_response.txt"
    if [ -f "$filepath" ]; then
        rm "$filepath"
        echo "Removed $filepath"
    else
        echo "File $filepath does not exist"
    fi
done


################################################# DICOM_cleanup #############################################
for ID in $(seq 10001 10150); do
rm -r ${ID}/eWIP/
rm -r ${ID}/dWIP/
rm -r ${ID}/faWIP/
done

%s/\/scratch\/cbayouth\/group\/template3\///g

slicesdir *.nii.gz.

mkdir fc/output
for id in $(seq 10002 10150) $(seq 11001 11105); do
  src="fc/${id}_fc/IN.mif"
  dst="fc/output/${id}_fc.mif"
  if [ -f "$src" ]; then
    cp "$src" "$dst"
done

mkdir fc2/output
for id in $(seq 10002 10150) $(seq 11001 11105); do
  src="fc2/${id}_fc/${id}.mif"
  dst="fc2/output/${id}_fc.mif"
  if [ -f "$src" ]; then
    cp "$src" "$dst"
fi
done

mkdir fdc2/output
for id in $(seq 10002 10150) $(seq 11001 11105); do
  src="fdc2/${id}_fdc/${id}.mif"
  dst="fc/output/${id}_fc.mif"
  if [ -f "$src" ]; then
    cp "$src" "$dst"
done
mkdir fd/output
for id in $(seq 10002 10150) $(seq 11001 11105); do
  src="fd/${id}_fd/PRE.mif"
  dst="fd/output/${id}_fd.mif"
  if [ -f "$src" ]; then
    cp "$src" "$dst"
fi
done

mkdir fixel_reorient/output
for id in $(seq 10002 10150) $(seq 11001 11105); do
  src="fixel_reorient/${id}_fixel_in_template_space/PRE.mif"
  dst="fixel_reorient/output/${id}_fixel_in_template_space.mif"
  if [ -f "$src" ]; then
    cp "$src" "$dst"
else
echo "file not found $src"
  fi
done


for i in $(seq 10003 10149); do
  mv "${i}wmfod.mif" "${i}_wmfod.mif"
done

#!/bin/bash

# Base directory
BASE_DIR="/home/cbayouth/DICOMS_2"

# Find directories matching the pattern and rename them
find "$BASE_DIR" -type d -name "DTI32*" | while read -r dir; do
    # Get the parent directory of the current directory
    parent_dir=$(dirname "$dir")
    
    # Rename the directory to "DTI32"
    mv "$dir" "$parent_dir/DTI32"
done

echo "DTI rename completed!"

    ## for eWIP
# Find directories matching the pattern and rename them
find "$BASE_DIR" -type d -name "eWIP*" | while read -r dir; do
    # Get the parent directory of the current directory
    parent_dir=$(dirname "$dir")
    
    # Rename the directory to "eWIP"
    mv "$dir" "$parent_dir/eWIP"
done

echo "eWIP Renaming completed!"

    ## for dWIP

# Find directories matching the pattern and rename them
find "$BASE_DIR" -type d -name "dWIP*" | while read -r dir; do
    # Get the parent directory of the current directory
    parent_dir=$(dirname "$dir")
    
    # Rename the directory to "dWIP"
    mv "$dir" "$parent_dir/dWIP"
done

echo "dWIP Renaming completed!"

    ## for faWIP

# Find directories matching the pattern and rename them
find "$BASE_DIR" -type d -name "faWIP*" | while read -r dir; do
    # Get the parent directory of the current directory
    parent_dir=$(dirname "$dir")
    
    # Rename the directory to "faWIP"
    mv "$dir" "$parent_dir/faWIP"
done

echo "faWIP Renaming completed!"

## Possible fuckery deleting shit

# List of allowed folder names
ALLOWED=("eWIP" "DTI32" "faWIP" "dWIP")

# Loop through all participant folders in the base directory
find "$BASE_DIR" -mindepth 1 -maxdepth 1 -type d | while read -r participant_folder; do
    echo "Checking participant folder: $participant_folder"

    # Loop through all subfolders in the participant folder
    find "$participant_folder" -mindepth 1 -maxdepth 1 -type d | while read -r subfolder; do
        # Extract the name of the subfolder
        subfolder_name=$(basename "$subfolder")

        # Check if the folder name is NOT in the allowed list
        if [[ ! " ${ALLOWED[@]} " =~ " ${subfolder_name} " ]]; then
            echo "Deleting folder: $subfolder"
            rm -rf "$subfolder"
        fi
    done
done

echo "Cleanup completed!"
